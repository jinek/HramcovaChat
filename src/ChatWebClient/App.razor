@using System.Collections.ObjectModel
@inject IServiceProvider _serviceProvider

<div class="container" style="margin-bottom: 1em">
    <h1>Chat web client</h1>
    <a href="http://@HostName:24526/everything.tar.gz">Download console application</a>
</div>
<div class="container" style="margin-bottom: 1em">
    <form @onsubmit="TextEntered">
        <div class="row align-items-center">
            <div class="col-auto">
                <label class="col-form-label" for="userInput">Enter login or message here:</label>
            </div>
            <div class="col-auto">
                <input type="text" @bind="@inputValue" class="form-control" disabled="@Sending" id="userInput" autocomplete="off"/>
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary" disabled="@Sending">Submit</button>
            </div>
        </div>
    </form>
</div>
<div class="container" style="margin-bottom: 1em">
    <ul class="list-unstyled">
        @foreach (var message in _messages)
        {
            <li>
                <blockquote class="blockquote">@message</blockquote>
            </li>
        }
    </ul>
</div>


@code {
    //todo: сделать блок ошибки, а это всё показывать условно
    //todo: делать enter по enter, фокус по дефолту в окно
    private string inputValue = string.Empty;
    private readonly ObservableCollection<string> _messages = new();


    private void TextEntered()
    {
        if (Sending) return;
        TaskCompletionSource! /*Must not be called if null*/.TrySetResult(inputValue);
        inputValue = string.Empty;
    }

    //todo: https://docs.microsoft.com/en-us/visualstudio/containers/container-launch-settings?view=vs-2019
}